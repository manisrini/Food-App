{"ast":null,"code":"var _jsxFileName = \"/home/manikandan/Desktop/react/01-starting-project-foodapp/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport CartContext from \"./cart-contex\";\nimport { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const newTotAmt = state.totalAmount + action.item.price * action.item.amount;\n    const existingitemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingItem = state.items[existingitemIndex];\n    let updatedItem, updatedItems;\n\n    if (existingItem) {\n      updatedItem = { ...existingItem,\n        amount: existingItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingitemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: newTotAmt\n    };\n  }\n\n  if (action.type === \"REMOVE\") {\n    const existingitemIndex = state.items.findIndex(item => item.id === action.id);\n    const existingItem = state.items[existingitemIndex];\n    const updatedTotalAmt = state.totalAmount - existingItem.price;\n    let updatedItems;\n\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter(item => item.id !== action.id);\n    } else {\n      const updatedItem = { ...existingItem,\n        amount: existingItem.amount - 1\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingitemIndex] = updatedItem;\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmt\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCart = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemfromCart = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const cardContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCart,\n    removeItem: removeItemfromCart\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cardContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/home/manikandan/Desktop/react/01-starting-project-foodapp/src/store/CartProvider.js"],"names":["CartContext","useReducer","defaultCartState","items","totalAmount","cartReducer","state","action","type","newTotAmt","item","price","amount","existingitemIndex","findIndex","id","existingItem","updatedItem","updatedItems","concat","updatedTotalAmt","filter","CartProvider","props","cartState","dispatchCartAction","addItemToCart","removeItemfromCart","cardContext","addItem","removeItem","children"],"mappings":"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","sourcesContent":["import CartContext from \"./cart-contex\";\nimport { useReducer } from \"react\";\n\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0,\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const newTotAmt =\n      state.totalAmount + action.item.price * action.item.amount;\n    const existingitemIndex = state.items.findIndex(\n      (item) => item.id === action.item.id\n    );\n\n    const existingItem = state.items[existingitemIndex];\n\n    let updatedItem, updatedItems;\n\n    if (existingItem) {\n      updatedItem = {\n        ...existingItem,\n        amount: existingItem.amount + action.item.amount,\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingitemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: newTotAmt,\n    };\n  }\n  if (action.type === \"REMOVE\") {\n    const existingitemIndex = state.items.findIndex(\n      (item) => item.id === action.id\n    );\n    const existingItem = state.items[existingitemIndex];\n    const updatedTotalAmt = state.totalAmount - existingItem.price;\n\n    let updatedItems;\n    if (existingItem.amount === 1) {\n      updatedItems = state.items.filter((item) => item.id !== action.id);\n    } else {\n      const updatedItem = {...existingItem,amount : existingItem.amount - 1}\n      updatedItems = [...state.items]\n      updatedItems[existingitemIndex] = updatedItem;\n    }\n\n    return{\n      items : updatedItems,\n      totalAmount : updatedTotalAmt\n    }\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = (props) => {\n  const [cartState, dispatchCartAction] = useReducer(\n    cartReducer,\n    defaultCartState\n  );\n\n  const addItemToCart = (item) => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item,\n    });\n  };\n\n  const removeItemfromCart = (id) => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id,\n    });\n  };\n\n  const cardContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCart,\n    removeItem: removeItemfromCart,\n  };\n\n  return (\n    <CartContext.Provider value={cardContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;\n"]},"metadata":{},"sourceType":"module"}
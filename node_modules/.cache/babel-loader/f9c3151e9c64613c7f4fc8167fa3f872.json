{"ast":null,"code":"var _jsxFileName = \"/home/manikandan/Desktop/react/01-starting-project-foodapp/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport CartContext from \"./cart-contex\";\nimport { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const newItems = state.items.concat(action.item);\n    const existingitemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingItem = state.items[existingitemIndex];\n    let updatedItem, updatedItems;\n\n    if (existingItem) {\n      updatedItem = { ...existingItem,\n        amount: existingItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingitemIndex] = updatedItem;\n    }\n\n    const newTotAmt = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: newItems,\n      totalAmount: newTotAmt\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCart = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemfromCart = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const cardContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCart,\n    removeItem: removeItemfromCart\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cardContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/home/manikandan/Desktop/react/01-starting-project-foodapp/src/store/CartProvider.js"],"names":["CartContext","useReducer","defaultCartState","items","totalAmount","cartReducer","state","action","type","newItems","concat","item","existingitemIndex","findIndex","id","existingItem","updatedItem","updatedItems","amount","newTotAmt","price","CartProvider","props","cartState","dispatchCartAction","addItemToCart","removeItemfromCart","cardContext","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,SAASC,UAAT,QAA2B,OAA3B;;AAEA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,KAAK,EAAE,EADgB;AAEvBC,EAAAA,WAAW,EAAE;AAFU,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACzB,UAAMC,QAAQ,GAAGH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAAjB;AAEA,UAAMC,iBAAiB,GAAGN,KAAK,CAACH,KAAN,CAAYU,SAAZ,CACvBF,IAAD,IAAUA,IAAI,CAACG,EAAL,KAAYP,MAAM,CAACI,IAAP,CAAYG,EADV,CAA1B;AAIA,UAAMC,YAAY,GAAGT,KAAK,CAACH,KAAN,CAAYS,iBAAZ,CAArB;AAEA,QAAII,WAAJ,EAAgBC,YAAhB;;AAEA,QAAGF,YAAH,EAAgB;AACZC,MAAAA,WAAW,GAAG,EACV,GAAGD,YADO;AAEVG,QAAAA,MAAM,EAAGH,YAAY,CAACG,MAAb,GAAsBX,MAAM,CAACI,IAAP,CAAYO;AAFjC,OAAd;AAIAD,MAAAA,YAAY,GAAG,CAAC,GAAGX,KAAK,CAACH,KAAV,CAAf;AACAc,MAAAA,YAAY,CAACL,iBAAD,CAAZ,GAAkCI,WAAlC;AACH;;AAED,UAAMG,SAAS,GACbb,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,IAAP,CAAYS,KAAZ,GAAoBb,MAAM,CAACI,IAAP,CAAYO,MADtD;AAEA,WAAO;AACLf,MAAAA,KAAK,EAAEM,QADF;AAELL,MAAAA,WAAW,EAAEe;AAFR,KAAP;AAID;;AAED,SAAOjB,gBAAP;AACD,CA9BD;;AAgCA,MAAMmB,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCvB,UAAU,CAChDI,WADgD,EAEhDH,gBAFgD,CAAlD;;AAKA,QAAMuB,aAAa,GAAId,IAAD,IAAU;AAC9Ba,IAAAA,kBAAkB,CAAC;AACjBhB,MAAAA,IAAI,EAAE,KADW;AAEjBG,MAAAA,IAAI,EAAEA;AAFW,KAAD,CAAlB;AAID,GALD;;AAOA,QAAMe,kBAAkB,GAAIZ,EAAD,IAAQ;AACjCU,IAAAA,kBAAkB,CAAC;AACjBhB,MAAAA,IAAI,EAAE,QADW;AAEjBM,MAAAA,EAAE,EAAEA;AAFa,KAAD,CAAlB;AAID,GALD;;AAOA,QAAMa,WAAW,GAAG;AAClBxB,IAAAA,KAAK,EAAEoB,SAAS,CAACpB,KADC;AAElBC,IAAAA,WAAW,EAAEmB,SAAS,CAACnB,WAFL;AAGlBwB,IAAAA,OAAO,EAAEH,aAHS;AAIlBI,IAAAA,UAAU,EAAEH;AAJM,GAApB;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,WAA7B;AAAA,cACGL,KAAK,CAACQ;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAhCD;;GAAMT,Y;;KAAAA,Y;AAkCN,eAAeA,YAAf","sourcesContent":["import CartContext from \"./cart-contex\";\nimport { useReducer } from \"react\";\n\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0,\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const newItems = state.items.concat(action.item);\n\n    const existingitemIndex = state.items.findIndex(\n      (item) => item.id === action.item.id\n    );\n\n    const existingItem = state.items[existingitemIndex]\n\n    let updatedItem,updatedItems;\n\n    if(existingItem){\n        updatedItem = {\n            ...existingItem,\n            amount : existingItem.amount + action.item.amount\n        }\n        updatedItems = [...state.items];\n        updatedItems[existingitemIndex] = updatedItem;\n    }    \n\n    const newTotAmt =\n      state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: newItems,\n      totalAmount: newTotAmt,\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = (props) => {\n  const [cartState, dispatchCartAction] = useReducer(\n    cartReducer,\n    defaultCartState\n  );\n\n  const addItemToCart = (item) => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item,\n    });\n  };\n\n  const removeItemfromCart = (id) => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id,\n    });\n  };\n\n  const cardContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCart,\n    removeItem: removeItemfromCart,\n  };\n\n  return (\n    <CartContext.Provider value={cardContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;\n"]},"metadata":{},"sourceType":"module"}
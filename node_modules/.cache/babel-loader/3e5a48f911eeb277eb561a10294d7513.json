{"ast":null,"code":"var _jsxFileName = \"/home/manikandan/Desktop/react/01-starting-project-foodapp/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport CartContext from './cart-contex';\nimport { useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type == \"ADD\") {\n    const newItems = state.items.concat(item);\n    const newTotAmt = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: newItems,\n      totalAmount: newTotAmt\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCart = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemfromCart = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const cardContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCart,\n    removeItem: removeItemfromCart\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cardContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartProvider, \"E9CekID1lnxT/F7i8iiaiBP8bmk=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/home/manikandan/Desktop/react/01-starting-project-foodapp/src/store/CartProvider.js"],"names":["CartContext","useReducer","defaultCartState","items","totalAmount","cartReducer","state","action","type","newItems","concat","item","newTotAmt","price","amount","CartProvider","props","cartState","dispatchCartAction","addItemToCart","removeItemfromCart","id","cardContext","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,SAAQC,UAAR,QAA0B,OAA1B;;AAGA,MAAMC,gBAAgB,GAAG;AACrBC,EAAAA,KAAK,EAAI,EADY;AAErBC,EAAAA,WAAW,EAAG;AAFO,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAOC,MAAP,KAAkB;AAElC,MAAGA,MAAM,CAACC,IAAP,IAAe,KAAlB,EAAwB;AACpB,UAAMC,QAAQ,GAAGH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBC,IAAnB,CAAjB;AACA,UAAOC,SAAS,GAAGN,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,IAAP,CAAYE,KAAZ,GAAoBN,MAAM,CAACI,IAAP,CAAYG,MAAvE;AACA,WAAM;AACFX,MAAAA,KAAK,EAAGM,QADN;AAEFL,MAAAA,WAAW,EAAGQ;AAFZ,KAAN;AAIH;;AAED,SAAOV,gBAAP;AACH,CAZD;;AAgBA,MAAMa,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAE5B,QAAM,CAACC,SAAD,EAAWC,kBAAX,IAAkCjB,UAAU,CAACI,WAAD,EAAcH,gBAAd,CAAlD;;AAEA,QAAMiB,aAAa,GAAGR,IAAI,IAAI;AAC1BO,IAAAA,kBAAkB,CAAC;AACfV,MAAAA,IAAI,EAAG,KADQ;AAEfG,MAAAA,IAAI,EAAGA;AAFQ,KAAD,CAAlB;AAKH,GAND;;AAQA,QAAMS,kBAAkB,GAAGC,EAAE,IAAI;AAC7BH,IAAAA,kBAAkB,CAAC;AACfV,MAAAA,IAAI,EAAG,QADQ;AAEfa,MAAAA,EAAE,EAAGA;AAFU,KAAD,CAAlB;AAIH,GALD;;AAOA,QAAMC,WAAW,GAAG;AAChBnB,IAAAA,KAAK,EAAIc,SAAS,CAACd,KADH;AAEhBC,IAAAA,WAAW,EAAGa,SAAS,CAACb,WAFR;AAGhBmB,IAAAA,OAAO,EAAGJ,aAHM;AAIhBK,IAAAA,UAAU,EAAGJ;AAJG,GAApB;AAOA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACKN,KAAK,CAACS;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAhCD;;GAAMV,Y;;KAAAA,Y;AAkCN,eAAeA,YAAf","sourcesContent":["import CartContext from './cart-contex'\nimport {useReducer } from 'react';\n\n\nconst defaultCartState = {\n    items :  [],\n    totalAmount : 0\n}\n\nconst cartReducer = (state,action) => {\n\n    if(action.type == \"ADD\"){\n        const newItems = state.items.concat(item)\n        const  newTotAmt = state.totalAmount + action.item.price * action.item.amount\n        return{\n            items : newItems,\n            totalAmount : newTotAmt\n        }\n    }\n\n    return defaultCartState\n}\n\n\n\nconst CartProvider = (props) => {\n\n    const [cartState,dispatchCartAction ] = useReducer(cartReducer, defaultCartState)\n\n    const addItemToCart = item => {\n        dispatchCartAction({\n            type : \"ADD\",\n            item : item\n        })\n        \n    };\n\n    const removeItemfromCart = id => {\n        dispatchCartAction({\n            type : \"REMOVE\",\n            id : id\n        })\n    };\n\n    const cardContext = {\n        items :  cartState.items,\n        totalAmount : cartState.totalAmount,\n        addItem : addItemToCart,\n        removeItem : removeItemfromCart\n    }\n\n    return (\n        <CartContext.Provider value={cardContext}>\n            {props.children}\n        </CartContext.Provider>\n    )\n\n}\n\nexport default CartProvider;"]},"metadata":{},"sourceType":"module"}